## Todo at the very beginning
	create database with the same properties as in settings.py
		>> sudo -iu postgres
		>> psql
		#  CREATE USER django_crowd WITH PASSWORD 'abc123';
		#  ALTER USER django_crowd CREATEDB Superuser;
		#  exit
		>> psql -U django_crowd -d template1;
		#  CREATE DATABASE croundfunder;
		
	clone the repo

## Todo everytime you want to work

	1 - start by pulling the repo
	git pull

	2 - run your virtual environment
	3 - run pip install -r requirments.txt
	3 - DONOT makemigrations XXXXX. ONLY RUN migrate
	4 - make your changes
	5 - run (pip freeze > requirments.txt) if you installed any new libraries
	6 - stage and commit your changes

	7 - pull again to check for any megre cnflicts
	8 - solve any conflicts by using
		git config --global pull.rebase true
		open conflicting files and choose with care!!!!
	9 - push your changes!
	10 - Always keep your commits short and descriptive

=================
User: A new app 

##	Properties
##	- First name 
##	- Last name 
##	- Email 
##	- Password 
##	- Confirm password 
##	- Mobile phone [validated against Egyptian phone numbers] 
##	- Profile Picture

##	- Activation Email after registration 
##	- Once the user register he should receive an email with the activation link. The user shouldnâ€™t be able to login without activation. The activation link should expire after 24 hours.
##	- The user should be able to login after activation using his email and password 

##	- Bonus: Allow users to login with facebook account

##	- Forgot Password (Bonus)
##	- The user should have an option to reset his password if he forgot it to receive a password reset link to his email
	
	
##	- User Profile, The user can view his profile which: 
##	- He can view his profile 

	- He can view his projects 
	- He can view his donations 

##	- He can edit all his data except for the email
##	- He can have extra optional info other than the info he added while registration (Birthdate, facebook profile, country)
	
##	- User can delete his account (Note that there must be a confirmation message before deleting) 
##	- Bonus: User must enter his password to delete his account

====================

2 - Projects:
	- The user can create a project fund raise campaign which contains: 
		- Title 
		- Details 
		- Category (from list of categories added previously by admins) - Multiple pictures 
		- Total target (i.e 250000 EGP) 
		- Multiple Tags 
		- Set start/end time for the campaign 
		- Comments

	- Users can view any project and donate to the total target 
	- Users can add comments on the projects 
	- Bonus: Comments can have replies 
	- Users can report inappropriate projects 
	- Users can report inappropriate comments 
	- Users can rate the projects 
	- Project creator can cancel the project if the donations are less than 25% of the target 
	- Project page should show the overall average rating of the project - Project page should show the project pictures in a slider
	- Project page should show 4 other similar projects based on project tags 

##	model: Donation
##	- Amount
##	- project
##	- user

=======================================
App: Homepage should contains the following:
	- A slider to show the highest five rated running projects to encourage users to donate
	- List of the latest 5 projects
	- List of latest 5 featured projects (which are selected by the admin) 
	- A list of the categories. User can open each category to view its projects 
	- Search bar that enables users to search projects by title or tag 
	
=================	
App: Feedback

	4 - Comment
		- user
		- project
		- content
		
	5 - Review
		- project
		- user
		- value

	6 - Report
		- user
		- project / comment
		- reason
		- status (seen / new / solved)


